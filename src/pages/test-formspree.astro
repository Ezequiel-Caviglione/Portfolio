---
// Test page for Formspree configuration
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Test Formspree</title>
  </head>
  <body>
    <div style="padding: 2rem; font-family: system-ui;">
      <h1>Formspree Configuration Test</h1>
      <div id="test-results"></div>
      <button
        id="test-config"
        style="padding: 0.5rem 1rem; margin: 1rem 0; background: #007acc; color: white; border: none; border-radius: 4px; cursor: pointer;"
      >
        Test Configuration
      </button>
      <button
        id="test-submission"
        style="padding: 0.5rem 1rem; margin: 1rem 0; background: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer;"
      >
        Test Form Submission
      </button>
    </div>

    <script>
      import {
        testFormspreeConfig,
        testFormspreeSubmission,
      } from "../lib/test-formspree.ts";

      const resultsDiv = document.getElementById("test-results")!;
      const testConfigBtn = document.getElementById(
        "test-config",
      )! as HTMLButtonElement;
      const testSubmissionBtn = document.getElementById(
        "test-submission",
      )! as HTMLButtonElement;

      function displayResults(title: string, result: any): void {
        const div = document.createElement("div");
        div.style.cssText =
          "margin: 1rem 0; padding: 1rem; border-radius: 4px; border-left: 4px solid #007acc;";
        div.innerHTML = `
          <h3>${title}</h3>
          <pre style="background: #f5f5f5; padding: 0.5rem; border-radius: 4px; overflow-x: auto;">${JSON.stringify(result, null, 2)}</pre>
        `;
        resultsDiv.appendChild(div);
      }

      testConfigBtn.addEventListener("click", () => {
        const result = testFormspreeConfig();
        displayResults("Configuration Test", result);
      });

      testSubmissionBtn.addEventListener("click", async () => {
        testSubmissionBtn.disabled = true;
        testSubmissionBtn.textContent = "Testing...";

        try {
          const result = await testFormspreeSubmission();
          displayResults("Submission Test", result);
        } catch (error) {
          displayResults("Submission Test Error", {
            error: error instanceof Error ? error.message : String(error),
          });
        } finally {
          testSubmissionBtn.disabled = false;
          testSubmissionBtn.textContent = "Test Form Submission";
        }
      });

      // Auto-run config test on page load
      window.addEventListener("load", () => {
        const result = testFormspreeConfig();
        displayResults("Auto Configuration Check", result);
      });
    </script>
  </body>
</html>
